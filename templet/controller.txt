package [basePackageController];

import cn.wsq.common.Result;
import cn.wsq.common.TableResult;
import [basePackageEntity].[Table];
import [basePackageService].[Table]Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
@RequestMapping("[table]")
public class [Table]Controller {
    @Autowired
    private [Table]Service [table]Service;
    /*
    * 按分页查询
    * */
    @RequestMapping("get[Table]List")
    public TableResult<[Table]> get[Table]List(@RequestParam(defaultValue = "0") int offset, @RequestParam(defaultValue = "10") int limit){
        TableResult<[Table]> [table]List = [table]Service.get[Table]List(offset, limit);
        return [table]List;
    }
    /*
     * 删除Ids集合
     * */
    @RequestMapping("delete[Table]")
    public Result deleteByIds([keyType][] ids){
        Result result = [table]Service.deleteByIds(ids);
        return result;
    }
    /*
     * 保存或者是更新
     * */
    @RequestMapping("saveOrUpdate[Table]")
    public Result saveOrUpdate[Table]([Table] [table]){
        Result result = [table]Service.saveOrUpdate[Table]([table]);
        return result;
    }
    /*
     * 根据Id获取
     * */
    @RequestMapping("get[Table]ById")
    public [Table] get[Table]ById([keyType] id){
        [Table] [table] = [table]Service.get[Table]ById(id);
        return [table];
    }
    /*
    * 根据实体类对象查询
    * */
    @RequestMapping("searchByEntity")
    public List<[Table]> searchByEntity([Table] [table]){
        List<[Table]> [table]s = [table]Service.searchByEntity([table]);
        return [table]s;
    }
    /*
    * 获取所有的数据
    * */
    @RequestMapping("getList")
    public List<[Table]> getList(){
        List<[Table]> list = [table]Service.getList();
        return list;
    }
    /*
     * 分页查询和条件查询
     * */
    @RequestMapping("getSearchPage")
    public TableResult<[Table]> getSearchPage(@RequestParam(defaultValue = "0") int offset, @RequestParam(defaultValue = "10") int limit,[Table] [table]){
        TableResult<[Table]> result=[table]Service.getSearchPage(offset,limit,[table]);
        return result;
    }
}
